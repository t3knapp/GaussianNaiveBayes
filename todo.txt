Big picture:
Train
- Take in data and sort it by class label
- Create relevant parameters for each dataset corresponding to a class label, store in params
Test
- To test, need to create likelihoods for each set of class data
- Given test data, use likelihoods and Naive Bayes to create probabilities for each class label
- Select the class label with biggest probability and compare it to actual value to compute % correctness

To Do:
- Need to think about how to calculate likelihoods
- Create a way to connect data_ arrays to the class label to test for correctness - This is the key to the test function
- Create an "predict" function, maybe have test use eval inside of it?
- lots of debugging, going to need to look at the train function
- Create a way for user to choose prior distribution
